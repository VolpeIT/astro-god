---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro"
import NavStatic from "@/components/NavStatic.astro"
import type { CollectionEntry } from "astro:content";

const getTal = async () => {
  const pages = await getCollection("pages")
  const blog = await getCollection("blog")
  return pages.map((page) => {
    const [lang] = page.slug.split("/")
    return { params: { slug: lang || undefined }, props: {...page, blog: blog.filter(post => post.slug.includes(lang))} }
  })
}

export const getStaticPaths = (async() => {
  const pages = await getCollection("pages")
  const blog = await getCollection("blog")
  return pages.map((page) => {
    const [lang] = page.slug.split("/")
    return { params: { slug: lang || undefined }, props: {...page, blog: blog.filter(post => post.slug.includes(lang))} }
  })
}) satisfies GetStaticPaths;


const {slug} = Astro.params
const {body, data: t,blog } = Astro.props
function addBlogToSlug(post: CollectionEntry<"blog">): string {
  const [lang] = post.slug.split("/")
  return [lang, "blog", post.data.path].join("/")
}

const {Content} = await Astro.props.render()
---

<Layout seoTitle={t["index.seoTitle"]}>
  <section class="gap-10 pico">
    <h1>{t["index.h1"]}</h1>
    <h2>{t["index.h2"]}</h2>
    <p>{t["index.p1"]}</p>
    <p>{t["index.p2"]}</p>
    <p>{t["index.p3"]}</p>
    <Content/>
  </section>
</Layout>
