---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro"
import NavStatic from "@/components/NavStatic.astro"

export const getStaticPaths = (async() => {
  const pages = await getCollection("blog")
  const blog = await getCollection("blog")
  // const globals = await getCollection("globals")
  return pages.map((page) => {
    const [lang, ...rest] = page.slug.split("/")
    return { params: { slug: lang, id: page.data.path || undefined }, props: {...page, blog: blog.filter(post => post.slug.includes(lang))} }
    // return { params: { slug: lang, id: rest.join("/") || undefined }, props: page }
  })
}) satisfies GetStaticPaths;

const {slug} = Astro.params
const {body, data: t,blog} = Astro.props

const { Content } = await Astro.props.render()

function extractHeaders(markdown: string): string[] {
  return markdown
    .split("\n")
    .filter((line: string) => /^#{2,6} /.test(line)) // Filtra solo los encabezados
    .map((line: string) =>
      line
        .replace(/^#+ /, "") // Elimina los `#` y el espacio
        .trim()
        .toLowerCase()
        .replace(/[^\p{L}0-9\s-]/gu, "") // Conserva letras Unicode (incluyendo acentos), nÃºmeros, espacios y guiones
        .replace(/\s+/g, "-") // Reemplaza espacios con guiones
    );
}

function extractRawHeaders(markdown: string): string[] {
  return markdown
    .split("\n")
    .filter((line: string) => /^#{2,6} /.test(line)) // Filtra solo los encabezados
    .map((line: string) => line.replace(/^#+ /, "").trim()); // Elimina los `#` iniciales y espacios extra
}

const headerHrefs = extractHeaders(body ?? "")
const headersNice = extractRawHeaders(body ?? "")
---

<Layout seoTitle={t["h1"]} >
  <section class="flex gap-10">
    <aside class="h-full sticky top-14 w-50 max-lg:hidden pico">
      <ul>
        {headerHrefs.map((header, i) => {
          return <li><a href={`#${header}`} class="-z-10 tal block text-xs text-white/70 hover:text-white">{headersNice[i]}</a></li>
        })}
      </ul>
    </aside>
    <div class="max-w-full box-border pico">
      <Content/>
    </div>
  </section>
</Layout>

<style>
  section {
    /* box-sizing: border-box !important; */
    /* padding: .5rem; */
  }
  .tal {
    text-overflow: ellipsis;
    /* Needed to make it work */
    overflow: hidden;
    white-space: nowrap;
  }
  li {
    margin-left: 0;
    list-style: none !important;
  }
  a { 
    text-decoration: none !important;
  }
</style>
